// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.formrecognizer.implementation.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** An object representing observed text styles. */
@Fluent
public final class DocumentStyle {
    /*
     * Font family of the text in the specified spans.
     */
    @JsonProperty(value = "fontFamily")
    private FontFamily fontFamily;

    /*
     * Font style of the text in the specified spans.
     */
    @JsonProperty(value = "fontStyle")
    private FontStyle fontStyle;

    /*
     * Font weight of the text in the specified spans.
     */
    @JsonProperty(value = "fontWeight")
    private FontWeight fontWeight;

    /*
     * Font decoration of the text in the specified spans.
     */
    @JsonProperty(value = "textDecoration")
    private List<String> textDecoration;

    /*
     * Font size of the text in the specified spans.
     */
    @JsonProperty(value = "fontSize")
    private Float fontSize;

    /*
     * Confidence of correctly identifying the style.
     */
    @JsonProperty(value = "confidence")
    private Float confidence;

    /*
     * Location of the text elements in the concatenated content the style
     * applies to.
     */
    @JsonProperty(value = "spans", required = true)
    private List<DocumentSpan> spans;

    /**
     * Get the fontFamily property: Font family of the text in the specified spans.
     *
     * @return the fontFamily value.
     */
    public FontFamily getFontFamily() {
        return this.fontFamily;
    }

    /**
     * Set the fontFamily property: Font family of the text in the specified spans.
     *
     * @param fontFamily the fontFamily value to set.
     * @return the DocumentStyle object itself.
     */
    public DocumentStyle setFontFamily(FontFamily fontFamily) {
        this.fontFamily = fontFamily;
        return this;
    }

    /**
     * Get the fontStyle property: Font style of the text in the specified spans.
     *
     * @return the fontStyle value.
     */
    public FontStyle getFontStyle() {
        return this.fontStyle;
    }

    /**
     * Set the fontStyle property: Font style of the text in the specified spans.
     *
     * @param fontStyle the fontStyle value to set.
     * @return the DocumentStyle object itself.
     */
    public DocumentStyle setFontStyle(FontStyle fontStyle) {
        this.fontStyle = fontStyle;
        return this;
    }

    /**
     * Get the fontWeight property: Font weight of the text in the specified spans.
     *
     * @return the fontWeight value.
     */
    public FontWeight getFontWeight() {
        return this.fontWeight;
    }

    /**
     * Set the fontWeight property: Font weight of the text in the specified spans.
     *
     * @param fontWeight the fontWeight value to set.
     * @return the DocumentStyle object itself.
     */
    public DocumentStyle setFontWeight(FontWeight fontWeight) {
        this.fontWeight = fontWeight;
        return this;
    }

    /**
     * Get the textDecoration property: Font decoration of the text in the specified spans.
     *
     * @return the textDecoration value.
     */
    public List<String> getTextDecoration() {
        return this.textDecoration;
    }

    /**
     * Set the textDecoration property: Font decoration of the text in the specified spans.
     *
     * @param textDecoration the textDecoration value to set.
     * @return the DocumentStyle object itself.
     */
    public DocumentStyle setTextDecoration(List<String> textDecoration) {
        this.textDecoration = textDecoration;
        return this;
    }

    /**
     * Get the fontSize property: Font size of the text in the specified spans.
     *
     * @return the fontSize value.
     */
    public Float getFontSize() {
        return this.fontSize;
    }

    /**
     * Set the fontSize property: Font size of the text in the specified spans.
     *
     * @param fontSize the fontSize value to set.
     * @return the DocumentStyle object itself.
     */
    public DocumentStyle setFontSize(Float fontSize) {
        this.fontSize = fontSize;
        return this;
    }

    /**
     * Get the confidence property: Confidence of correctly identifying the style.
     *
     * @return the confidence value.
     */
    public Float getConfidence() {
        return this.confidence;
    }

    /**
     * Set the confidence property: Confidence of correctly identifying the style.
     *
     * @param confidence the confidence value to set.
     * @return the DocumentStyle object itself.
     */
    public DocumentStyle setConfidence(Float confidence) {
        this.confidence = confidence;
        return this;
    }

    /**
     * Get the spans property: Location of the text elements in the concatenated content the style applies to.
     *
     * @return the spans value.
     */
    public List<DocumentSpan> getSpans() {
        return this.spans;
    }

    /**
     * Set the spans property: Location of the text elements in the concatenated content the style applies to.
     *
     * @param spans the spans value to set.
     * @return the DocumentStyle object itself.
     */
    public DocumentStyle setSpans(List<DocumentSpan> spans) {
        this.spans = spans;
        return this;
    }
}
