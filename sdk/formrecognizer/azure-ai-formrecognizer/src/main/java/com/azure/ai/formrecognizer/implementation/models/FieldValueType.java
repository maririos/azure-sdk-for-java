// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.ai.formrecognizer.implementation.models;

import com.azure.core.util.ExpandableStringEnum;
import com.fasterxml.jackson.annotation.JsonCreator;
import java.util.Collection;

/** Defines values for FieldValueType. */
public final class FieldValueType extends ExpandableStringEnum<FieldValueType> {
    /** Static value string for FieldValueType. */
    public static final FieldValueType STRING = fromString("string");

    /** Static value date for FieldValueType. */
    public static final FieldValueType DATE = fromString("date");

    /** Static value time for FieldValueType. */
    public static final FieldValueType TIME = fromString("time");

    /** Static value phoneNumber for FieldValueType. */
    public static final FieldValueType PHONE_NUMBER = fromString("phoneNumber");

    /** Static value number for FieldValueType. */
    public static final FieldValueType NUMBER = fromString("number");

    /** Static value integer for FieldValueType. */
    public static final FieldValueType INTEGER = fromString("integer");

    /** Static value selectionMark for FieldValueType. */
    public static final FieldValueType SELECTION_MARK = fromString("selectionMark");

    /** Static value countryRegion for FieldValueType. */
    public static final FieldValueType COUNTRY_REGION = fromString("countryRegion");

    /** Static value currency for FieldValueType. */
    public static final FieldValueType CURRENCY = fromString("currency");

    /** Static value signature for FieldValueType. */
    public static final FieldValueType SIGNATURE = fromString("signature");

    /** Static value array for FieldValueType. */
    public static final FieldValueType ARRAY = fromString("array");

    /** Static value object for FieldValueType. */
    public static final FieldValueType OBJECT = fromString("object");

    /**
     * Creates or finds a FieldValueType from its string representation.
     *
     * @param name a name to look for.
     * @return the corresponding FieldValueType.
     */
    @JsonCreator
    public static FieldValueType fromString(String name) {
        return fromString(name, FieldValueType.class);
    }

    /** @return known FieldValueType values. */
    public static Collection<FieldValueType> values() {
        return values(FieldValueType.class);
    }
}
